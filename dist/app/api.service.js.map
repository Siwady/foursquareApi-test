{"version":3,"file":"api.service.js","sourceRoot":"","sources":["../src/app/api.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAA6B,eAAe,CAAC,CAAA;AAC7C,IAAY,EAAE,WAAM,SAAS,CAAC,CAAA;AAG9B;IAYE,oBAAoB,IAAU;QAZhC,iBAsCC;QA1BqB,SAAI,GAAJ,IAAI,CAAM;QAN9B,OAAE,GAAW,wBAAwB,CAAC;QACtC,WAAM,GAAW,MAAM,CAAC;QACxB,UAAK,GAAW,IAAI,CAAC;QACrB,aAAQ,GAAW,kDAAkD,CAAC;QACtE,iBAAY,GAAW,kDAAkD,CAAC;QAC1E,MAAC,GAAW,UAAU,CAAC;QAErB,IAAI,CAAC,SAAS,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;QAChC,IAAI,CAAC,MAAM,GAAG,IAAI,EAAE,CAAC,UAAU,CAAQ,UAAA,QAAQ;YAC7C,KAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;QACjC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;IAC9C,CAAC;IAED,wBAAG,GAAH;QAAA,iBAkBC;QAjBC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iDAAiD,GAAG,IAAI,CAAC,EAAE;YACvE,UAAU,GAAG,IAAI,CAAC,MAAM;YACxB,SAAS,GAAG,IAAI,CAAC,KAAK;YACtB,aAAa,GAAG,IAAI,CAAC,QAAQ;YAC7B,iBAAiB,GAAG,IAAI,CAAC,YAAY;YACrC,KAAK,GAAG,IAAI,CAAC,CAAC,EACd;YACE,OAAO,EAAE,IAAI,cAAO,CAAC;gBACnB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;aACD,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC,SAAS,CAAC,UAAA,IAAI;YAC9C,KAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC;YAC7B,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAClD,CAAC,EAAE,UAAA,KAAK;YACN,OAAA,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC;QAAtC,CAAsC,CACvC,CAAC;IACN,CAAC;IAtCH;QAAC,iBAAU,EAAE;;kBAAA;IAuCb,iBAAC;AAAD,CAAC,AAtCD,IAsCC;AAtCY,kBAAU,aAsCtB,CAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport {Http, Headers } from '@angular/http';\nimport * as Rx from 'rxjs/Rx';\n\n@Injectable()\nexport class ApiService {\n  public venues: Rx.Observable<any[]>;\n  private venuesObserver: Rx.Observer<any[]>;\n  private dataStore: {\n    venues: any[]\n  };\n  ll: string = '15.5016812,-88.0386028';\n  radius: string = '1000';\n  limit: string = '10';\n  clientId: string = 'XPB0JBR0H4C0HAA35MTKMDJUVF0TGGCJNOZRAYNB1WXTE5EW';\n  clientSecret: string = '4ITRZG2KKRYGPD4NTN0OIHYIHIIAXRQ2U0FSTYVFBT2QB4TB';\n  v: string = '20131017';\n  constructor(private http: Http) {\n    this.dataStore = { venues: [] };\n    this.venues = new Rx.Observable<any[]>(observer => {\n      this.venuesObserver = observer;\n    }).startWith(this.dataStore.venues).share();\n  }\n\n  get() {\n    this.http.get('https://api.foursquare.com/v2/venues/search?ll=' + this.ll +\n      '&radius=' + this.radius +\n      '&limit=' + this.limit +\n      '&client_id=' + this.clientId +\n      '&client_secret=' + this.clientSecret +\n      '&v=' + this.v,\n      {\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      })\n      .map(response => response.json()).subscribe(data => {\n        this.dataStore.venues = data;\n        this.venuesObserver.next(this.dataStore.venues);\n      }, error =>\n        console.log('Could not load element.')\n      );\n  }\n}\n"]}